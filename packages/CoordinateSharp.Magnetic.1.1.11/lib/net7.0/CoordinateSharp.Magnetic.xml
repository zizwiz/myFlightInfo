<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CoordinateSharp.Magnetic</name>
    </assembly>
    <members>
        <member name="T:CoordinateSharp.Magnetic.CoefficientModel">
            <summary>
            Magnetic coefficient models. Extracted from .COF file available on NOAA. Link subject to change.
            https://www.ngdc.noaa.gov/geomag/WMM/soft.shtml
            </summary>
        </member>
        <member name="T:CoordinateSharp.Magnetic.DataModel">
            <summary>
            Magnetic Data Model
            </summary>
        </member>
        <member name="F:CoordinateSharp.Magnetic.DataModel.WMM2015">
            <summary>
            World Magnetic Model 2015 (2014-2019).
            </summary>
        </member>
        <member name="F:CoordinateSharp.Magnetic.DataModel.WMM2020">
            <summary>
            World Magnetic Model 2020 (2019-2024).
            </summary>
        </member>
        <member name="T:CoordinateSharp.Magnetic.MagneticExtensions">
            <summary>
            Extends Coordinate class with Magnetic functions.
            </summary>
        </member>
        <member name="M:CoordinateSharp.Magnetic.MagneticExtensions.GetMagnetic(CoordinateSharp.Coordinate,CoordinateSharp.Magnetic.DataModel)">
            <summary>
            Creates a Magnetic object from a Coordinate. Assumes height is at MSL and a provided data model.
            </summary>
            <param name="coordinate">Coordinate</param>
            <param name="dataModel">Data Model</param>
            <returns>Magnetic</returns>
            <example>
            Creating a Magnetic object from a coordinate.
            <code>
            Coordinate c = Coordinate(25,25, new DateTime(2020,1,1));
            Magnetic m = c.GetMagnetic(DataModel.WMM2020);
            </code>
            </example>
        </member>
        <member name="M:CoordinateSharp.Magnetic.MagneticExtensions.GetMagnetic(CoordinateSharp.Coordinate,System.Double,CoordinateSharp.Magnetic.DataModel)">
            <summary>
            Creates a Magnetic object from a Coordinate with a specified height in meters above MSL and a provided data model.
            </summary>
            <param name="coordinate">Coordinate</param>
            <param name="height">Height in Meters</param>
            <param name="dataModel">Data Model</param>
            <returns>Magnetic</returns>
            <example>
            Creating a Magnetic object from a coordinate with a specified height.
            <code>
            Coordinate c = Coordinate(25,25, new DateTime(2020,1,1));
            //Height in meters.
            Magnetic m = c.GetMagnetic(1000, DataModel.WMM2020);
            </code>
            </example>
        </member>
        <member name="M:CoordinateSharp.Magnetic.MagneticExtensions.GetMagnetic(CoordinateSharp.Coordinate,CoordinateSharp.Distance,CoordinateSharp.Magnetic.DataModel)">
            <summary>
            Creates a Magnetic object from a Coordinate with a specified height above MSL and a provided data model.
            </summary>
            <param name="coordinate">Coordinate</param>
            <param name="height">Height</param>
            <param name="dataModel">Data Model</param>
            <returns>Magnetic</returns>
            <example>
            Creating a Magnetic object from a coordinate with a specified height..
            <code>
            Coordinate c = Coordinate(25,25, new DateTime(2020,1,1));
            Distance d = new Distance(10, DistanceType.Miles); //Height is 10 miles above MSL
            Magnetic m = c.GetMagnetic(d, DataModel.WMM2020);
            </code>
            </example>
        </member>
        <member name="T:CoordinateSharp.Magnetic.Magnetic">
            <summary>
            Coordinate based magnetic data.
            </summary>
        </member>
        <member name="M:CoordinateSharp.Magnetic.Magnetic.#ctor(CoordinateSharp.Coordinate,CoordinateSharp.Magnetic.DataModel)">
            <summary>
            Initializes a magnetic object based on a Coordinate and a provided data Model. Assumes height is at MSL.
            </summary>
            <param name="coordinate">Coordinate</param>
            <param name="dataModel">DataModel</param>
            <example>
            Creating a Magnetic object from a coordinate.
            <code>
            Coordinate c = Coordinate(25,25, new DateTime(2020,1,1));
            Magnetic m = new Magnetic(c, DataModel.WMM2020);
            </code>
            </example>
        </member>
        <member name="M:CoordinateSharp.Magnetic.Magnetic.#ctor(CoordinateSharp.Coordinate,System.Double,CoordinateSharp.Magnetic.DataModel)">
            <summary>
            Initializes a magnetic object based on a Coordinate, height and a provided data model.
            </summary>
            <param name="coordinate">Coordinate</param>
            <param name="height">Height in Meters</param>
            <param name="dataModel">Data Model</param>
            <example>
            Creating a Magnetic object from a coordinate with a specified height (in meters).
            <code>
            Coordinate c = Coordinate(25,25, new DateTime(2020,1,1));
            Magnetic m = new Magnetic(c, 1000, DataModel.WMM2020);
            </code>
            </example>
        </member>
        <member name="M:CoordinateSharp.Magnetic.Magnetic.#ctor(CoordinateSharp.Coordinate,CoordinateSharp.Distance,CoordinateSharp.Magnetic.DataModel)">
            <summary>
            Initializes a magnetic object based on a Coordinate, height and a provided data model.
            </summary>
            <param name="coordinate">Coordinate</param>
            <param name="height">Height</param>
            <param name="dataModel">Data Model</param>
            <example>
            Creating a Magnetic object from a coordinate with a specified height (in meters).
            <code>
            Coordinate c = Coordinate(25,25, new DateTime(2020,1,1));
            Distance d = new Distance(10, DistanceType.Miles); //Height is 10 miles above MSL
            Magnetic m = new Magnetic(c, d, DataModel.WMM2020);
            </code>
            </example>
        </member>
        <member name="M:CoordinateSharp.Magnetic.Magnetic.#ctor(System.Double,System.Double,System.DateTime,System.Double,System.Double,CoordinateSharp.Magnetic.DataModel)">
            <summary>
            Initializes a magnetic object based on a signed lat/long, date, time offset, height in meters and a provided data model.
            Assume WGS84 datum earth shape for calculations.
            </summary>
            <param name="lat">Latitude</param>
            <param name="lng">Longitude</param>
            <param name="date">DateTime</param>
            <param name="offset">UTC Offset in Hours</param>
            <param name="height">Height in Meters</param>
            <param name="dataModel">Data Model</param>
        </member>
        <member name="M:CoordinateSharp.Magnetic.Magnetic.Load(System.Double,System.Double,System.Double,System.Double,System.Double,System.DateTime)">
            <summary>
            Load Magnetic Values.
            </summary>
            <param name="lat">Signed Latitude (Geodetic)</param>
            <param name="lng">Signed Longitude (Geodetic)</param>
            <param name="height">Height in Meters</param>
            <param name="semiMajorAxis">Semi-Major Axis</param>
            <param name="inverseFlattening">Inverse Flattening</param>
            <param name="date">Date Time</param>
        </member>
        <member name="P:CoordinateSharp.Magnetic.Magnetic.MagneticFieldElements">
            <summary>
            Location and DateTime based magnetic field elements.
            </summary>
        </member>
        <member name="P:CoordinateSharp.Magnetic.Magnetic.SecularVariations">
            <summary>
            Location and DateTime based secular variation elements.
            </summary>
        </member>
        <member name="P:CoordinateSharp.Magnetic.Magnetic.Uncertainty">
            <summary>
            Location and DateTime based geomagnetic uncertainty estimates.
            </summary>
        </member>
        <member name="P:CoordinateSharp.Magnetic.Magnetic.Model">
            <summary>
            Geomagnetic data model.
            </summary>
        </member>
        <member name="T:CoordinateSharp.Magnetic.FieldElements">
            <summary>
            Field elements used in various magnetic data method types.
            </summary>
        </member>
        <member name="P:CoordinateSharp.Magnetic.FieldElements.NorthComponent">
            <summary>
            North Component.
            </summary>
        </member>
        <member name="P:CoordinateSharp.Magnetic.FieldElements.EastComponent">
            <summary>
            East Component.
            </summary>
        </member>
        <member name="P:CoordinateSharp.Magnetic.FieldElements.DownComponent">
            <summary>
            Down Component.
            </summary>
        </member>
        <member name="P:CoordinateSharp.Magnetic.FieldElements.HorizontalIntensity">
            <summary>
            Horizontal Intensity.
            </summary>
        </member>
        <member name="P:CoordinateSharp.Magnetic.FieldElements.TotalIntensity">
            <summary>
            Total Intensity.
            </summary>
        </member>
        <member name="P:CoordinateSharp.Magnetic.FieldElements.Inclination">
            <summary>
            Inclination.
            </summary>
        </member>
        <member name="P:CoordinateSharp.Magnetic.FieldElements.Declination">
            <summary>
            Declination.
            </summary>
        </member>
        <member name="T:CoordinateSharp.Magnetic.MagneticFieldElements">
            <summary>
            Magnetic field elements.
            </summary>
        </member>
        <member name="M:CoordinateSharp.Magnetic.MagneticFieldElements.#ctor(CoordinateSharp.Magnetic.Magnetic)">
            <summary>
            Initializes magnetic field elements.
            </summary>
            <param name="m">Magnetic</param>
        </member>
        <member name="P:CoordinateSharp.Magnetic.MagneticFieldElements.GridVariation">
            <summary>
            Grid Variation.
            </summary>
        </member>
        <member name="T:CoordinateSharp.Magnetic.SecularVariations">
            <summary>
            Magnetic secular variation elements.
            </summary>
        </member>
        <member name="M:CoordinateSharp.Magnetic.SecularVariations.#ctor(CoordinateSharp.Magnetic.Magnetic)">
            <summary>
            Initializes magnetic secular variations.
            </summary>
            <param name="m">Magnetic</param>
        </member>
        <member name="T:CoordinateSharp.Magnetic.Uncertainty">
            <summary>
            Magnetic uncertainty elements.
            </summary>
        </member>
        <member name="M:CoordinateSharp.Magnetic.Uncertainty.#ctor(CoordinateSharp.Magnetic.Magnetic)">
            <summary>
            Initializes magnetic uncertainty.
            </summary>
            <param name="m">Magentic</param>
        </member>
    </members>
</doc>
